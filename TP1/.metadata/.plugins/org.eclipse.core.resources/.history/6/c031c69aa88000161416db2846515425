import javafx.util.*;
import java.util.*;
import java.io.*;


public class Main {
	
	public static void main(String[] args) {
		
		int max = 0;
		InputStream ips; 
		
		// lecture du fichier en paramètre
		String path = args[0];
		
		try {
			InputStream ips = new FileInputStream(path);
			InputStreamReader reader = new InputStreamReader(ips);
			BufferedReader br = new BufferedReader(reader);
		}
		
		
		// récupération de l et h 
		String line = br.readLine();
		int w = Integer.parseInt(line.split(" ")[0]);
		int h = Integer.parseInt(line.split(" ")[1]);
		
		//récupération de n 
		line = br.readLine();
		int n = Integer.parseInt(line);
		line = br.readLine();
		
		//création du tableau de points
		Point[] tab = new Point[n +2];
		tab[0] = new Point(0,0);
		int cpt = 1;
		
		//on récupère tous les points 
		while (line != null) {
			
			String[] t = line.split(" ");
			int x = Integer.parseInt(t[0]);
			int y = Integer.parseInt(t[1]);
			
			tab[cpt] = new Point(x,y);
			cpt++;
			
			line = br.readLine();
		}
		
		br.close();
		
		//on ajoute le point (l,0)
		tab[cpt] = new Point(w,0);
		
		//on trie le tableau par abscisses des points croissantes
		Arrays.sort(tab, new Cmp());
		
		// Algo en n3 trouvé 
		for (int i = 0 ; i <= n ; i++ ) {
			
			int abs = tab[i].getKey(); 
			
			for (int j = i + 1 ; j < tab.length ; j++) {
				
				int width = tab[j].getKey() - abs;
				int minHeight = h;
				
				for (int k = i ; k <= j ; k++) {
					
					if (minHeight > tab[k].getValue()) {
						minHeight = tab[k].getValue();
					}
					
				}
				
				int tmp = minHeight * width;
				if (tmp > max) {
					max = tmp;
				}
			}
					
		}
		
		System.out.print(max);
	}
	
}
